<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean class="in.helloroomie.util.CustomObjectMapper" />
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<context:component-scan base-package="in.helloroomie" />
	<context:property-placeholder
		location="classpath:datasource/main/datasource.properties, classpath:mailconfiguration/main/mailconfig.properties" />
	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />

	<!-- For dynamic page mapping -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> 
		<property name="prefix" value="/WEB-INF/views/" /> <property name="suffix" 
		value=".jsp" /> </bean> -->

	<!-- For static page mapping -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/views/**" location="/WEB-INF/views/" />

	<!-- First page to open without hitting to controller -->
	<mvc:view-controller path="/" view-name="/views/spa.html" />


	<!-- Configure to plugin JSON as request and response in method handler -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter" />
			</list>
		</property>
	</bean>

	<!-- Configure bean to convert JSON to POJO and vice versa -->
	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	</bean>

	<!--Email Configuration -->
	<bean id="mailConfig" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="${host}" />
		<property name="port" value="${port}" />
		<property name="username" value="${emailid}" />
		<property name="password" value="${password}" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">${mail.transport.protocol}</prop>
				<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
				<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
			</props>
		</property>
	</bean>

	<!--Database Configuration -->
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<property name="driverClassName" value="${database.driver}"></property>
		<property name="url" value="${database.url}"></property>
		<property name="username" value="${database.user}"></property>
		<property name="password" value="${database.password}"></property>
	</bean>

	<!--Entity Configuration -->
	<bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
		id="sessionFactory">
		<property name="dataSource" ref="dataSource"></property>
		<property name="annotatedClasses">
			<list>
				<value>in.helloroomie.domain.city.City</value>
				<value>in.helloroomie.domain.zone.Zone</value>
				<value>in.helloroomie.domain.locality.Locality</value>
				<value>in.helloroomie.domain.user.User</value>
				<value>in.helloroomie.domain.ad.Ad</value>
				<value>in.helloroomie.domain.ad.Image</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>


	<!--Transaction Manager -->
	<bean class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		id="hibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- MultiPart Form Data -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

</beans>